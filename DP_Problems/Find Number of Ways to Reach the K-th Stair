3154. Find Number of Ways to Reach the K-th Stair

class Solution {
public:
unordered_map<string , int>dp;
int solve(int i , int prev, int k, int jump){
    if(i > k + 1) return 0;
    // because forward vo exp jump le rha haii and hm consectivily wapas nhi aa pate (i-1) ki help se

    // if(i == k) return 1;     
    // ye lagane se aadhe hi raste expolore karegaai;
    string key = to_string(i) + "_" + to_string(jump) + "_" + to_string(prev);

    if(dp.find(key) != dp.end()) return dp[key];

    int ans = 0;
    if(i == k ) ans += 1;

    if(prev == 1){
        if(i-1 >= 0){
            ans += solve(i-1 , false,  k , jump );
        }
    }

    int next_step = i + pow(2 , jump);
    ans += solve(next_step , true , k , jump + 1 );
    return dp[key] = ans;
}
    int waysToReachStair(int k) {
        // for memo either use 3D array or by unordered map
        // vector<vector<vector<int>>>dp(k+2 , vector<vector<int>>(31 , vector<int>(2 , -1)));
        int prev = 1;
        int jump = 0;
        return solve(1 , prev, k , jump);
    }
};
